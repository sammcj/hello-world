name: Build Template Hello-World Container Image

on:
  push:
    branches:
      - "main"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: sammcj/hello-world
  DOCKER_BUILDKIT: 1

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out the repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4
        with:
          go-version: '^1.20.0'

        # install deps
      - name: deps
        run: make deps

        # linting
      - name: lint
        run: make format

        # static analysis
      - name: vet
        run: make vet

        # unit tests
      - name: Run tests
        run: make test

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
      - lint-and-test
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            goarch: amd64
            dockerenv:
          # - platform: linux/arm64
          #   goarch: arm64
          #   dockerenv:

    steps:
      - name: Check out the repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      # Cross-compile the golang app first and generate
      # the sha1sum to help with the provenance of the
      # binary in the images.
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4
        with:
          go-version: '^1.20.0'

      - name: Compile the app
        run: |
          export GOOS=linux GOARCH=${{ matrix.goarch }}
          make deps
          make build

      - name: Show binary info
        run: make info >> "$GITHUB_STEP_SUMMARY"

      - name: Log in to the container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c # v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},name-canonical=true,push=true,push-by-digest=true
          sbom: true
          provenance: true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Update Step Summary
        run: .github/actions-scripts/output-job-summary.sh
        id: step-summary
        if: always()
        shell: bash
